
@Library('GissFwDevOps') _

pipeline 
{
	// Por defecto serÃƒÂ¡ aconsejable ejecutar los pipes en un esclavo linux
	// Si es un esclavo widnows tendrÃƒÂ¡ que asegurarse que se dispone de las herramientas
	// necesarias instaladas para ejecutar el proceso como el bash, git,  y otras ...
  	agent any
  	
  	options { 
  		skipDefaultCheckout()
  		disableConcurrentBuilds()
  	 }
  	
  	parameters {
  	    // ParÃƒÂ¡metro que indica si se tiene que invocar a la fase de BUILD en el entorno DES o no
        // Por defecto se invoca, las llamadas desde Azure DevOps este parametro se tiene que 
        // actualizar a false, ya que Azure realiza la compilacion
        booleanParam(name: 'BUILD', defaultValue: 'true', description: 'false-> No compila, true-> Compila' )
		// Parametro que indica si el repositorio se tiene que replicar desde Azure Repo a GitHub
	   	booleanParam(name: 'REPLY_GITHUB', defaultValue: 'false', description: 'false-> No sincroniza, true-> Sincroniza' )
	  	// Parametro que indica si se tiene que invocar un pipe de azure para compilar, utilizando las credenciales de acceso a azure repo
	   	booleanParam(name: 'BUILD_AZURE', defaultValue: 'false', description: 'false-> No invoca a pipe azure, true-> Invoca pipe de compilacion azure' )
	   	// Parametro que indica si el JOB se va a soportar bloqueo en la fase de despliegue
	   	booleanParam(name: 'LOCK_DEPLOY', defaultValue: 'false', description: 'false-> No bloquea los despliegues, true-> Antes de desplegar bloquea el proceso' )
   	  	// Parametro que indica si el JOB se va a soportar o bien gestion de la infraestrutura o bien su uso
	   	booleanParam(name: 'INFRASTRUCTURE_ENABLE', defaultValue: 'false', description: 'false-> No se tiene en cuenta el despliegue de la infraestructura, true-> Se tiene en cuenta que el proyecto es de infraestrutura' )
	   	// Parametro que indica si el JOB unicamente tiene activa las fases relativas a compilacion
	   	booleanParam(name: 'BUILD_ONLY', defaultValue: 'false', description: 'false-> se ejecutan todas las fases, true-> solo se tienen en cuenta las fases relativas a compilacion' )
		// Parametro que indica si el JOB va a realizar etapas de construcción de imágenes de Docker
		booleanParam(name: 'BUILD_DOCKER', defaultValue: 'false', description: 'false-> No ejecuta etapa de Docker, true-> Ejecuta compilacion de Docker' )

    }
  	environment 
	{
	
		HTTP_PROXY="http://proxy-sa.seg-social.es:8080"
		HTTPS_PROXY="https://proxy-sa.seg-social.es:8080"
		JAVA_OPTS="-Djava.net.useSystemProxies=true -Dhttp.proxyHost=proxy-sa.seg-social.es -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy-sa.seg-social.es -Dhttps.proxyPort=8080 -Dgroovy.grape.report.downloads=true"
		MAVEN_OPTS="-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
		// VARIABLES A PERSONALIZAR
		// en environment:
		//			GIT_URL				: URL al repositorio en dÃƒÂ³nde se localiza el proyecto y existe el directorio de pipes  
		//			GIT_CREDENTIALSID	: Credencial dada de alta dentro de JENKINS con acceso al repositorio
		//			PRJ					: nombre del proyecto y carpeta donde se aloja los componentes dentro del REPO deploy de artifactory
		//									En el caso de azure proyecto/repositorio para github unicamente repositorio
		//			ARTIFACTORY_REPO	: repositorio dentro de artifactory donde se aloja el componente a desplegar
		//			CRYPT_CREDENTIAL_MANAGER	: credencial de JK de tipo text que tiene al contraseï¿½a de desencriptacion del gestor
		// GIT_URL="https://github.com/ITACCIONA/oficina_devops_jenkis_framework.git"

		//GIT_URL="https://gitlab.pro.portal.ss/devops/framework/devops__framework__job.git"
		GIT_URL="https://github.com/isanchezta/devops__framework__job.git"
		PRJ="pipes" // DENOMINACION DEL PROYECTO EN DONDE SE ALOJAN LOS ARTEFACTOS EN ARTIFACTORY
		ARTIFACTORY_REPO="oficina_devops-deploy"// REPOSITORIO DONDE SE ALOJA LOS ARTEFACTOS DEL PROYECTO
		CRYPT_CREDENTIAL_MANAGER="MISECRETO_CLAVE1"
		AZURE_PROJECT="oficina_devops" 			// Acceso a PIPE AZURE para compilar
		AZURE_BUILDID=374						// ID del JOB de BUILD a invocar
		AZURE_RT_BUILDID=374					// ID del JOB de SONAR a invocar
		CODE_REVIEW=false
	}

	stages {

		stage('** DECISION SEGÚN WEBHOOK Y ESTADO **') {
			steps {
				sh "env"
				//sh "curl https://mvnrepository.com/"
				script {
					new stages.WebhookDecision(this).exec()
				}
			}
		}
	
		stage('** PASOS PREVIOS **') {
			steps {
				//sh "env"
				//sh "curl https://mvnrepository.com/"
				script {
					new stages.PasosPrevios(this).exec()
				}
			}
		}

		stage('** DESCARGA REPOSITORIO **') {
			steps {
				script {
					 new stages.DownloadRepo(this).exec()
				}
			}
		}

   		stage('** OBTENER VERSION A DESPLEGAR **') {
			steps {
		    	script {
					new stages.VersionDeploy(this).exec()
				}		    	
	    	}
		}

		stage('** TOMA DE DECISIONES SEGÚN ESTADO Y RAMA **') {
			steps {
		    	script {
					new stages.SelectOption(this).exec()
				}		    	
	    	}
		}

//		stage('** OBTENER A TRAVES DEL ESTADO Y LA RAMA EL ENTORNO **') {
//			steps {
//				script {
//					new stages.EntornoDeploy(this).exec()
//				}
//			}
//		}

//		stage('** FASE COMPILACION **') {
//			steps {
//				script {
//					new stages.Compilacion(this).exec()
//				}
//			}                       
//		}

//		stage('** DESCARGA A ARTIFACTORY **') {
//			steps {
//				script {
//					new stages.DownloadArtifactory(this).exec()
//				}     
//		   	}                
//		}

	
//		stage('** INVOCAR SCRIPT PERSONALIZADO DEL ENTORNO DE DESPLIEGUE **') {
//			steps {
//				script {
//					new stages.RunDeploy(this).exec()
//				}
//			}		
//		}
//	}
	
//	post {
//        always {
//		 	script {
//				new stages.Post(this).exec()
//			}
//		 }
	}
	
}
